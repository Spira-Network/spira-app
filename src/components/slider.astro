---
interface Props {
    class?: string
}

const { class: className } = Astro.props
---

<section aria-label='image carousel' class={className}>
    <div class='carousel'>
        <button class='carousel-button prev'>&lsaquo;</button>
        <button class='carousel-button next'>&rsaquo;</button>
        <ul>
            <li class='slide' data-active>
                <img src='slider/1.jpg' alt='first' />
            </li>
            <li class='slide'>
                <img src='slider/2.jpg' alt='second' />
            </li>
        </ul>
    </div>
</section>

<style>
    .carousel {
        width: 100%;
        height: 100vh;
        position: relative;
    }

    .slide {
        position: absolute;
        inset: 0;
        opacity: 0;
        transition: 200ms opacity ease-in-out;
        transition-delay: 200ms;
    }

    .carousel > ul {
        margin: 0;
        padding: 0;
        list-style: none;
    }

    .slide > img {
        display: block;
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
    }

    .slide[data-active] {
        opacity: 1;
        transition-delay: 0ms;
    }

    .carousel-button {
        position: absolute;
        background: none;
        border: none;
        font-size: 2rem;
        top: 50%;
        z-index: 1;
        transform: translateY(-50%);
        color: rgba(255, 255, 255, 0.5);
        cursor: pointer;
        padding: 0 1rem;
        background-color: rgba(0, 0, 0, 0.4);
    }

    .carousel-button:hover,
    .carousel-button:focus {
        color: white;
        background-color: rgba(0, 0, 0, 0.2);
    }

    .carousel-button:focus {
        outline: 1px solid black;
    }

    .carousel-button.prev {
        left: 0;
    }

    .carousel-button.next {
        right: 0;
    }
</style>

<script>
    const buttons = document.querySelectorAll('.carousel-button')

    buttons.forEach(button => {
        button.addEventListener('click', () => {
            const offset = button.classList.contains('next') ? 1 : -1
            const slides = button.closest('.carousel').querySelector('ul')

            const activeSlide = slides.querySelector('[data-active]') as any
            let newIndex = [...slides.children].indexOf(activeSlide) + offset

            if (newIndex < 0) {
                newIndex = slides.children.length - 1
            } else if (newIndex >= slides.children.length) {
                newIndex = 0
            }

            slides.children[newIndex].setAttribute('data-active', '')
            delete activeSlide.dataset.active
        })
    })
</script>
